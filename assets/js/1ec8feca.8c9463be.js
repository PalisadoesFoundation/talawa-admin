"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[42331],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},35634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docs/developer-resources/testing","title":"Testing","description":"Introduction","source":"@site/docs/docs/developer-resources/testing.md","sourceDirName":"docs/developer-resources","slug":"/developer-resources/testing","permalink":"/docs/developer-resources/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-admin/edit/develop/docs/docs/docs/developer-resources/testing.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"testing","title":"Testing","slug":"/developer-resources/testing","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Plugin System","permalink":"/docs/developer-resources/plugin"},"next":{"title":"End to End Testing","permalink":"/docs/developer-resources/e2e-testing"}}');var o=t(74848),i=t(28453);const r={id:"testing",title:"Testing",slug:"/developer-resources/testing",sidebar_position:5},c=void 0,l={},a=[{value:"Introduction",id:"introduction",level:2},{value:"UI/UX Testing",id:"uiux-testing",level:3},{value:"Running tests",id:"running-tests",level:3},{value:"Debugging tests",id:"debugging-tests",level:3},{value:"Linting code files",id:"linting-code-files",level:3},{value:"Husky for Git Hooks",id:"husky-for-git-hooks",level:3},{value:"pre-commit hook",id:"pre-commit-hook",level:5},{value:"post-merge hook",id:"post-merge-hook",level:5}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h5:"h5",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"It is important to test our code. If you are a contributor, please follow these steps."}),"\n",(0,o.jsx)(n.h3,{id:"uiux-testing",children:"UI/UX Testing"}),"\n",(0,o.jsxs)(n.p,{children:["If you have loaded the API sample database, then you can login using the credentials found on the ",(0,o.jsx)(n.a,{href:"https://docs-api.talawa.io/docs/developer-resources/testing/",children:"testing page of the API documentation website"})]}),"\n",(0,o.jsx)(n.h3,{id:"running-tests",children:"Running tests"}),"\n",(0,o.jsxs)(n.p,{children:["You can run the tests for ",(0,o.jsx)(n.code,{children:"talawa-admin"})," using this command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run test\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"debugging-tests",children:"Debugging tests"}),"\n",(0,o.jsxs)(n.p,{children:["You can see the output of failing tests in broswer by running ",(0,o.jsx)(n.code,{children:"jest-preview"})," package before running your tests"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run jest-preview\nnpm run test\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You don't need to re-run the ",(0,o.jsx)(n.code,{children:"npm run jest-preview"})," command each time, simply run the ",(0,o.jsx)(n.code,{children:"npm run test"})," command if the Jest Preview server is already running in the background, it'll automatically detect any failing tests and show the preview at ",(0,o.jsx)(n.code,{children:"http://localhost:3336"})," as shown in this screenshot -"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Debugging Test Demo",src:t(41698).A+"",width:"3808",height:"2244"})}),"\n",(0,o.jsx)(n.h3,{id:"linting-code-files",children:"Linting code files"}),"\n",(0,o.jsx)(n.p,{children:"You can lint your code files using this command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run lint:fix\n"})}),"\n",(0,o.jsx)(n.h3,{id:"husky-for-git-hooks",children:"Husky for Git Hooks"}),"\n",(0,o.jsxs)(n.p,{children:["We are using the package ",(0,o.jsx)(n.code,{children:"Husky"})," to run git hooks that run according to different git workflows."]}),"\n",(0,o.jsx)(n.h5,{id:"pre-commit-hook",children:"pre-commit hook"}),"\n",(0,o.jsx)(n.p,{children:"We run a pre-commit hook which automatically runs code quality checks each time you make a commit and also fixes some of the issues. This way you don't have to run them manually each time."}),"\n",(0,o.jsxs)(n.p,{children:["If you don't want these pre-commit checks running on each commit, you can manually opt out of it using the ",(0,o.jsx)(n.code,{children:"--no-verify"})," flag with your commit message as shown:-"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'git commit -m "commit message" --no-verify\n'})}),"\n",(0,o.jsx)(n.h5,{id:"post-merge-hook",children:"post-merge hook"}),"\n",(0,o.jsx)(n.p,{children:'We are also running a post-merge(post-pull) hook which will automatically run "npm install" only if there is any change made to pakage.json file so that the developer has all the required dependencies when pulling files from remote.'}),"\n",(0,o.jsxs)(n.p,{children:["If you don't want this hook to run, you can manually opt out of this using the ",(0,o.jsx)(n.code,{children:"--no-verify"})," flag while using the merge command ",(0,o.jsx)(n.code,{children:"git pull"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git pull --no-verify\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},41698:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/jest-preview-904700213f42d4006e82175fe92154ac.webp"}}]);