name: Validate CodeRabbit.ai Approval

on:
  workflow_call:
    inputs:
      github_token:
        required: true
        type: string
        
jobs:
    CodeRabbit-Approval:
        name: Validate CodeRabbit.ai Approval
        runs-on: ubuntu-latest
        steps:
        - name: Check CodeRabbit.ai Approval
          run: |
            echo "Step 1: Checking CodeRabbit.ai approval..."
            echo "Fetching PR reviews from GitHub API..."
            if ! reviews=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews"); then
                echo "Error: Failed to fetch PR reviews."
                exit 1
            fi
            echo "Checking if the response is valid JSON..."
            if ! echo "$reviews" | jq . >/dev/null 2>&1; then
                echo "Error: Invalid JSON response from GitHub API."
                echo "Response received: $reviews"
                exit 1
            fi
            echo "Parsing the latest review by each user..."
            if ! latest_reviews=$(echo "$reviews" | jq -c '[.[]] | group_by(.user.login) | map(max_by(.submitted_at))'); then
                echo "Error: Failed to parse reviews"
                exit 1
            fi
            echo "Printing all latest review user logins and states:"
            echo "$latest_reviews" | jq -r '.[] | "User: \(.user.login), State: \(.state)"'
            echo "Checking approval status of 'coderabbitai[bot]'..."
            if ! approval_state=$(echo "$latest_reviews" | jq -r '[.[] | select(.user.login == "coderabbitai[bot]" and .state == "APPROVED")] | length'); then
                echo "Error: Failed to check approval status"
                exit 1
            fi
            echo "Approval count for CodeRabbit.ai: $approval_state"
            if [[ "$approval_state" =~ ^[0-9]+$ ]] && [[ $approval_state -gt 0 ]]; then
                echo "Success: PR approved by CodeRabbit.ai."
            else
                echo "Error: PR is not approved by CodeRabbit.ai."
                exit 1
            fi
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
