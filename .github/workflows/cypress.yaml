name: Running Cypress Tests

on:
  pull_request:
    branches: [main, develop]

jobs:
  Install:
    runs-on: ubuntu-latest
    env:
      REACT_APP_TALAWA_URL: http://localhost:4000/graphql
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build

      - name: Save Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 1

  Setup-Backend-Run-Tests:
    timeout-minutes: 25
    runs-on: ubuntu-latest
    needs: Install
    steps:
      - name: Checkout Backend
        uses: actions/checkout@v4
        with:
          repository: palisadoesFoundation/talawa-api
          ref: develop

      - name: Setup Devcontainer
        run: |
          npm install -g @devcontainers/cli
          cp envFiles/.env.devcontainer .env
          devcontainer up --workspace-folder .

      - name: Install Dependencies
        run: docker exec talawa-api-1 /bin/bash -c 'pnpm install'

      - name: Start Backend Server
        run: docker exec talawa-api-1 /bin/bash -c 'pnpm run start_development_server &'

      - name: Wait for GraphQL endpoint to become available
        if: always()
        run: |
          echo "Waiting for the GraphQL endpoint to become available..."
          for i in {1..60}; do
            # Check if container exists first
            if ! docker ps | grep -q talawa-api-1; then
              echo "Container talawa-api-1 not found. Waiting..."
              sleep 2
              continue
            fi
            docker exec talawa-api-1 which curl >/dev/null 2>&1 || {
              docker exec talawa-api-1 apt-get update && docker exec talawa-api-1 apt-get install -y curl
            }
            RESPONSE=$(docker exec talawa-api-1 curl -s -X POST http://127.0.0.1:4000/graphql -H "Content-Type: application/json" -d '{"query":"{__typename}"}' 2>/dev/null || echo "Connection failed")
            if echo "$RESPONSE" | grep -q '__typename'; then
              echo "GraphQL endpoint is available, Backend is ready!"
              exit 0
            fi
            echo "GraphQL endpoint not ready. Retrying in 2 seconds..."
            sleep 2
          done
          echo "GraphQL endpoint did not become available within the expected time."
          exit 1

      - name: Get Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: frontend-build

      - name: Serve Frontend & Run Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend-build
          start: npx serve -s -l 4321 .
          wait-on: 'http://localhost:4321'
          config-file: cypress.config.ts
        env:
          CYPRESS_BASE_URL: http://localhost:4321
          REACT_APP_TALAWA_URL: http://localhost:4000/graphql

  Cleanup:
    if: always()
    runs-on: ubuntu-latest
    needs: [Install, Setup-Backend-Run-Tests]
    steps:
      - name: Remove Artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build