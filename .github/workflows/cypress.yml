name: Running Cypress Tests

on:
 pull_request:
   branches: [main, develop]


jobs:

 Setup-Run-Cypress-Tests:
   timeout-minutes: 35
   runs-on: ubuntu-latest
   env:
     REACT_APP_TALAWA_URL: http://127.0.0.1:4000/graphql
   steps:
     - name: Checkout Backend
       uses: actions/checkout@v4
       with:
         repository: palisadoesFoundation/talawa-api
         ref: develop

     - name: Setup Devcontainer
       run: |
         npm install -g @devcontainers/cli
         cp envFiles/.env.devcontainer .env
         devcontainer up --workspace-folder .

     - name: Install Backend Dependencies
       run: docker exec talawa-api-1 /bin/bash -c 'pnpm install'

    #  - name: Reset DB Schema
    #    run: |
    #      # (Optional) Drop existing tables/schemas if reusing a DB container
    #      docker exec talawa-postgres-1 psql -U talawa -d talawa -c "DROP SCHEMA IF EXISTS drizzle CASCADE;"
    #      # Remove Old Migrations
    #      docker exec talawa-api-1 rm -rf drizzle_migrations
    #      # Create New Migrations
    #      docker exec talawa-api-1 /bin/bash -c 'pnpm generate_drizzle_migrations'
    #      # Use the official reset command that handles test database properly
    #      docker exec talawa-api-1 /bin/bash -c 'pnpm run reset:data'
    #      # Apply migrations to test database
    #      docker exec talawa-api-1 /bin/bash -c 'pnpm apply_drizzle_test_migrations' &
    #      sleep 10
         
     - name: Reset DB Schema
       run: |
         # Reset the database schema
         docker exec talawa-api-1 /bin/bash -c 'yes | pnpm run reset:data'
         # Apply migrations to test database
         docker exec talawa-api-1 /bin/bash -c 'pnpm apply_drizzle_test_migrations' &
         sleep 10         

     - name: Seed Sample Data
       run: |
        echo "Checking container status..."
        docker ps -a
        echo "Running seed script..."
        docker exec talawa-api-1 /bin/bash -c 'pnpm run add:sample_data'

     - name: Start Backend Server
       run: |
         docker exec talawa-api-1 /bin/bash -c 'pnpm run start_development_server' &
         sleep 15
        #  curl -X POST -H "Content-Type: application/json" -k http://127.0.0.1:4000/graphql -d '{
        #    "query": "query signIn($input: QuerySignInInput!) { signIn(input: $input) { authenticationToken user { emailAddress id name } } }",
        #    "variables": {
        #      "input": {
        #        "emailAddress": "administrator@email.com",
        #        "password": "password"
        #      }
        #    }
        #  }'
        #  sleep 10         

     - name: Wait for GraphQL endpoint to become available
       if: always()
       run: |
         echo "Waiting for the GraphQL endpoint to become available..."
         for i in {1..40}; do
           # Check if container exists first
           if ! docker ps | grep -q talawa-api-1; then
             echo "Container talawa-api-1 not found. Waiting..."
             sleep 2
             continue
           fi
           docker exec talawa-api-1 which curl >/dev/null 2>&1 || {
             docker exec talawa-api-1 apt-get update && docker exec talawa-api-1 apt-get install -y curl
           }
           RESPONSE=$(docker exec talawa-api-1 curl -s -X POST http://127.0.0.1:4000/graphql -H "Content-Type: application/json" -d '{"query":"{__typename}"}' 2>/dev/null || echo "Connection failed")
           if echo "$RESPONSE" | grep -q '__typename'; then
             echo "GraphQL endpoint is available, Backend is ready!"
             exit 0
           fi
           echo "GraphQL endpoint not ready. Retrying in 2 seconds..."
           sleep 2
         done
         echo "GraphQL endpoint did not become available within the expected time."
         exit 1
      
     - name: Checkout Frontend
       uses: actions/checkout@v4
       with:
         path: frontend
    
     - name: Set up Node.js
       uses: actions/setup-node@v4
       with:
         node-version: '20.x'
    
     - name: Install Frontend Dependencies
       working-directory: frontend
       run: npm install
    
     - name: Setup .env
       run: |
         pwd && cp frontend/.env.example frontend/.env
         echo $REACT_APP_TALAWA_URL
         curl -s -X POST http://127.0.0.1:4000/graphql -H "Content-Type: application/json" -d '{"query":"{__typename}"}' 2>/dev/null
    
     - name: Run Cypress Tests with Dev Server
       uses: cypress-io/github-action@v6
       with:
         working-directory: frontend
         start: npm run serve
         wait-on: 'http://localhost:4321'
         wait-on-timeout: 120
         config-file: cypress.config.ts
         install: false
       env:
         CYPRESS_BASE_URL: http://localhost:4321
         CYPRESS_API_URL: http://127.0.0.1:4000/graphql
         REACT_APP_TALAWA_URL: http://127.0.0.1:4000/graphql
         REACT_APP_BACKEND_WEBSOCKET_URL: ws://127.0.0.1:4000/graphql
         
         #  docker exec talawa-api-1 /bin/bash -c 'pnpm run add:sample_data'